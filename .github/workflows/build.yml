---
name: Build CWMS Data API
on:
  push:
    branches:
      - develop
      - 'release/**'
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: build and test
    runs-on: ubuntu-latest
    outputs:
      thewar: ${{steps.thebuild.outputs.WARFILE}}
    steps:
      - name: checkout code
        uses: actions/checkout@v4.2.0
      - name: setup java
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '8'
          java-package: jdk
      - name: build and test
        id: thebuild
        run: ./gradlew build --info --init-script init.gradle
      - name: Upload WAR
        uses: actions/upload-artifact@v4.4.0
        with:
          name: warfile
          path: cwms-data-api/build/libs/${{steps.thebuild.outputs.WARFILE}}
          retention-days: 1
          if-no-files-found: error
      - name: Build docker image
        run: docker build -t cda:build-latest .

  release:
    if: github.event_name == 'push' && startsWith(github.ref,'refs/heads/release')
    name: Create and push releases
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4.2.0
      - name: setup java
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '8'
          java-package: jdk
      - name: Download all workflow run artifacts from build
        id: artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./
      - name: get version
        id: get_version
        run: .github/workflows/get_version.sh
      - name: show version
        run: echo ${VERSION}
      - name: tag repo
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{env.VERSION}}",
              sha: context.sha
            })
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.VERSION}}
          release_name: Release ${{env.VERSION}}
      - name: Upload Tomcat War
        id: upload-war
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: warfile/${{ needs.build.outputs.thewar}}
          asset_name: ${{ env.WAR_FILE_NAME}}
          asset_content_type: application/x-webarchive
      - name: Login to Alt Registry
        uses: docker/login-action@v2.0.0
        id: login-alt
        with:
          registry: ${{ secrets.ALT_REGISTRY }}
          username: ${{ secrets.ALT_REG_USER }}
          password: ${{ secrets.ALT_REG_PASSWORD }}
      - name: Build docker image
        env:
          IMAGE_TAG: ${{env.VERSION}}
          ALT_REGISTRY: ${{secrets.ALT_REGISTRY}}
        run: |
          docker build -t cda:build-latest .
          docker tag cda:build-latest $ALT_REGISTRY/cwms/data-api:$IMAGE_TAG
          docker tag cda:build-latest $ALT_REGISTRY/cwms/data-api:latest
          docker push $ALT_REGISTRY/cwms/data-api:$IMAGE_TAG
          docker push $ALT_REGISTRY/cwms/data-api:latest
      - name: Logout of ALT registry
        if: ${{ always() }}
        run: docker logout ${{ steps.login-alt.outputs.registry }}
